<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:aop="http://www.springframework.org/schema/aop"
   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	
	<!-- xml 방식으로 aop 적용 -->
	<!-- <bean id="loggerAspect" class="com.bs.spring.common.aop.LoggerAspect"/>
	
	<aop:config>
		<aop:aspect ref="loggerAspect">
			<aop:pointcut expression="execution(* com.bs.spring.memo..*(..))" id="logPointcut"/>
			memo 패키지의 모든 클래스의 모든 메소드, 모든 매개변수에 적용
			<aop:before method="loggerBefore" pointcut-ref="logPointcut"/>
			<aop:after method="loggerAfter" pointcut-ref="logPointcut"/>
		</aop:aspect>
	</aop:config> -->
	
	<!-- annotation 방식으로 aop 적용 -->
	<aop:aspectj-autoproxy/><!-- 해당 태그가 있어야 @Aspect를 찾아서 실행한다 -->

</beans>
